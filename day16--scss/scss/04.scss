@charset "utf-8";

/*
混合@mixin
sass中使用@mixin声明混合，可以传递参数，参数名以$符号开始，
多个参数以逗号分开，也可以给参数设置默认值。

	<---------声明的@mixin通过@include来调用。--------->
@mixin @include
*/


//无参数@mixin

@mixin  marginSet {
	margin-left: 100px;
	margin-top: 100px;
}

.class-1 {
	//@include 后加函数名    可以将函数中的所有内容在这里调用
	@include marginSet;// @include 调用 @mixin声明的函数
}


//带参数 mixin,参数可以有默认值
@mixin opacity($opacity:60){//@mixin声明的函数 可以进行传参 (变量:默认值) 如果下面不进行传参,那将使用默认值
	opacity: $opacity/100;      //将传入的变量  变量/100
}

.class-2 {
	@include opacity(50);//将50 传入函数
  //opacity:50/100;
}


@mixin fontSet($size: 1em) {
	font-size: 10 * $size;
}
.class-3 {
	@include fontSet(2em);
  //font-size:10*2em;
}



/*多参数, 默认值得参数必须从右向左，不能从左向右*/
/*
调用时可直接传入值，
如@include传入参数的个数小于@mixin定义参数的个数，则按照顺序表示，
后面不足的使用默认值，如不足的没有默认值则报错。除此之外还可以选择性的传入参数，
使用参数名与值同时传入。
*/
@mixin borderSet($border, $padding: 10px) {
	border: $border;
	padding: $padding;
}

.class-4 {
	@include borderSet(1px solid yellow);
  //border: 1px solid yellow;
  //padding: 20px;
}


/* ... 表示多组值*/
/*如果一个参数可以有多组值，如box-shadow、transition等，
那么参数则需要在变量后加三个点表示，如$variables…。*/
@mixin shadow($shadow...){
	box-shadow: $shadow;
}

.class-5 {
	@include shadow(1px 1px 1px green, 2px 2px 1px yellow, 3px 3px 1px red);
}




/* @content   包含内容*/

@mixin max-screen($res){
  @media only screen and ( max-width: $res )
  {
    /*可以用来解决css3的@media等带来的问题。
    它可以使@mixin接受一整块样式，接受的样式从@content开始。*/
    @content;  //将include中的样式包含在media中
  }
}

/*
@media only screen and (max-width: 480px) {
  font-size: 20px;
  color: yellow;
  padding: 10; }*/
@include max-screen(480px) {
	font-size: 20px;
	color: yellow;
	padding: 10;
}

@include max-screen(1000px) {
	font-size: 30px;
	color: blue;
}

@include max-screen(300px){
	//media没有样式
}
